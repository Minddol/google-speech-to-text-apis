//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/speech/v2/cloud_speech.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Enables speech transcription and resource management.
///
/// Usage: instantiate `Google_Cloud_Speech_V2_SpeechClient`, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Speech_V2_SpeechClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol? { get }

  func createRecognizer(
    _ request: Google_Cloud_Speech_V2_CreateRecognizerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_CreateRecognizerRequest, Google_Longrunning_Operation>

  func listRecognizers(
    _ request: Google_Cloud_Speech_V2_ListRecognizersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_ListRecognizersRequest, Google_Cloud_Speech_V2_ListRecognizersResponse>

  func getRecognizer(
    _ request: Google_Cloud_Speech_V2_GetRecognizerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_GetRecognizerRequest, Google_Cloud_Speech_V2_Recognizer>

  func updateRecognizer(
    _ request: Google_Cloud_Speech_V2_UpdateRecognizerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_UpdateRecognizerRequest, Google_Longrunning_Operation>

  func deleteRecognizer(
    _ request: Google_Cloud_Speech_V2_DeleteRecognizerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_DeleteRecognizerRequest, Google_Longrunning_Operation>

  func undeleteRecognizer(
    _ request: Google_Cloud_Speech_V2_UndeleteRecognizerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_UndeleteRecognizerRequest, Google_Longrunning_Operation>

  func recognize(
    _ request: Google_Cloud_Speech_V2_RecognizeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_RecognizeRequest, Google_Cloud_Speech_V2_RecognizeResponse>

  func streamingRecognize(
    callOptions: CallOptions?,
    handler: @escaping (Google_Cloud_Speech_V2_StreamingRecognizeResponse) -> Void
  ) -> BidirectionalStreamingCall<Google_Cloud_Speech_V2_StreamingRecognizeRequest, Google_Cloud_Speech_V2_StreamingRecognizeResponse>

  func batchRecognize(
    _ request: Google_Cloud_Speech_V2_BatchRecognizeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_BatchRecognizeRequest, Google_Longrunning_Operation>

  func getConfig(
    _ request: Google_Cloud_Speech_V2_GetConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_GetConfigRequest, Google_Cloud_Speech_V2_Config>

  func updateConfig(
    _ request: Google_Cloud_Speech_V2_UpdateConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_UpdateConfigRequest, Google_Cloud_Speech_V2_Config>

  func createCustomClass(
    _ request: Google_Cloud_Speech_V2_CreateCustomClassRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_CreateCustomClassRequest, Google_Longrunning_Operation>

  func listCustomClasses(
    _ request: Google_Cloud_Speech_V2_ListCustomClassesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_ListCustomClassesRequest, Google_Cloud_Speech_V2_ListCustomClassesResponse>

  func getCustomClass(
    _ request: Google_Cloud_Speech_V2_GetCustomClassRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_GetCustomClassRequest, Google_Cloud_Speech_V2_CustomClass>

  func updateCustomClass(
    _ request: Google_Cloud_Speech_V2_UpdateCustomClassRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_UpdateCustomClassRequest, Google_Longrunning_Operation>

  func deleteCustomClass(
    _ request: Google_Cloud_Speech_V2_DeleteCustomClassRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_DeleteCustomClassRequest, Google_Longrunning_Operation>

  func undeleteCustomClass(
    _ request: Google_Cloud_Speech_V2_UndeleteCustomClassRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_UndeleteCustomClassRequest, Google_Longrunning_Operation>

  func createPhraseSet(
    _ request: Google_Cloud_Speech_V2_CreatePhraseSetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_CreatePhraseSetRequest, Google_Longrunning_Operation>

  func listPhraseSets(
    _ request: Google_Cloud_Speech_V2_ListPhraseSetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_ListPhraseSetsRequest, Google_Cloud_Speech_V2_ListPhraseSetsResponse>

  func getPhraseSet(
    _ request: Google_Cloud_Speech_V2_GetPhraseSetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_GetPhraseSetRequest, Google_Cloud_Speech_V2_PhraseSet>

  func updatePhraseSet(
    _ request: Google_Cloud_Speech_V2_UpdatePhraseSetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_UpdatePhraseSetRequest, Google_Longrunning_Operation>

  func deletePhraseSet(
    _ request: Google_Cloud_Speech_V2_DeletePhraseSetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_DeletePhraseSetRequest, Google_Longrunning_Operation>

  func undeletePhraseSet(
    _ request: Google_Cloud_Speech_V2_UndeletePhraseSetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Speech_V2_UndeletePhraseSetRequest, Google_Longrunning_Operation>
}

extension Google_Cloud_Speech_V2_SpeechClientProtocol {
  public var serviceName: String {
    return "google.cloud.speech.v2.Speech"
  }

  /// Creates a [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateRecognizer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createRecognizer(
    _ request: Google_Cloud_Speech_V2_CreateRecognizerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_CreateRecognizerRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRecognizerInterceptors() ?? []
    )
  }

  /// Lists Recognizers.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListRecognizers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listRecognizers(
    _ request: Google_Cloud_Speech_V2_ListRecognizersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_ListRecognizersRequest, Google_Cloud_Speech_V2_ListRecognizersResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listRecognizers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListRecognizersInterceptors() ?? []
    )
  }

  /// Returns the requested
  /// [Recognizer][google.cloud.speech.v2.Recognizer]. Fails with
  /// [NOT_FOUND][google.rpc.Code.NOT_FOUND] if the requested Recognizer doesn't
  /// exist.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRecognizer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getRecognizer(
    _ request: Google_Cloud_Speech_V2_GetRecognizerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_GetRecognizerRequest, Google_Cloud_Speech_V2_Recognizer> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRecognizerInterceptors() ?? []
    )
  }

  /// Updates the [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateRecognizer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateRecognizer(
    _ request: Google_Cloud_Speech_V2_UpdateRecognizerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_UpdateRecognizerRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRecognizerInterceptors() ?? []
    )
  }

  /// Deletes the [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteRecognizer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteRecognizer(
    _ request: Google_Cloud_Speech_V2_DeleteRecognizerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_DeleteRecognizerRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deleteRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteRecognizerInterceptors() ?? []
    )
  }

  /// Undeletes the [Recognizer][google.cloud.speech.v2.Recognizer].
  ///
  /// - Parameters:
  ///   - request: Request to send to UndeleteRecognizer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func undeleteRecognizer(
    _ request: Google_Cloud_Speech_V2_UndeleteRecognizerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_UndeleteRecognizerRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeleteRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndeleteRecognizerInterceptors() ?? []
    )
  }

  /// Performs synchronous Speech recognition: receive results after all audio
  /// has been sent and processed.
  ///
  /// - Parameters:
  ///   - request: Request to send to Recognize.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func recognize(
    _ request: Google_Cloud_Speech_V2_RecognizeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_RecognizeRequest, Google_Cloud_Speech_V2_RecognizeResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.recognize.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRecognizeInterceptors() ?? []
    )
  }

  /// Performs bidirectional streaming speech recognition: receive results while
  /// sending audio. This method is only available via the gRPC API (not REST).
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  public func streamingRecognize(
    callOptions: CallOptions? = nil,
    handler: @escaping (Google_Cloud_Speech_V2_StreamingRecognizeResponse) -> Void
  ) -> BidirectionalStreamingCall<Google_Cloud_Speech_V2_StreamingRecognizeRequest, Google_Cloud_Speech_V2_StreamingRecognizeResponse> {
    return self.makeBidirectionalStreamingCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.streamingRecognize.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamingRecognizeInterceptors() ?? [],
      handler: handler
    )
  }

  /// Performs batch asynchronous speech recognition: send a request with N
  /// audio files and receive a long running operation that can be polled to see
  /// when the transcriptions are finished.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchRecognize.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func batchRecognize(
    _ request: Google_Cloud_Speech_V2_BatchRecognizeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_BatchRecognizeRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.batchRecognize.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchRecognizeInterceptors() ?? []
    )
  }

  /// Returns the requested [Config][google.cloud.speech.v2.Config].
  ///
  /// - Parameters:
  ///   - request: Request to send to GetConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getConfig(
    _ request: Google_Cloud_Speech_V2_GetConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_GetConfigRequest, Google_Cloud_Speech_V2_Config> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigInterceptors() ?? []
    )
  }

  /// Updates the [Config][google.cloud.speech.v2.Config].
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateConfig(
    _ request: Google_Cloud_Speech_V2_UpdateConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_UpdateConfigRequest, Google_Cloud_Speech_V2_Config> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateConfigInterceptors() ?? []
    )
  }

  /// Creates a [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateCustomClass.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createCustomClass(
    _ request: Google_Cloud_Speech_V2_CreateCustomClassRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_CreateCustomClassRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateCustomClassInterceptors() ?? []
    )
  }

  /// Lists CustomClasses.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListCustomClasses.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listCustomClasses(
    _ request: Google_Cloud_Speech_V2_ListCustomClassesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_ListCustomClassesRequest, Google_Cloud_Speech_V2_ListCustomClassesResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listCustomClasses.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListCustomClassesInterceptors() ?? []
    )
  }

  /// Returns the requested
  /// [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCustomClass.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCustomClass(
    _ request: Google_Cloud_Speech_V2_GetCustomClassRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_GetCustomClassRequest, Google_Cloud_Speech_V2_CustomClass> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCustomClassInterceptors() ?? []
    )
  }

  /// Updates the [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateCustomClass.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateCustomClass(
    _ request: Google_Cloud_Speech_V2_UpdateCustomClassRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_UpdateCustomClassRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateCustomClassInterceptors() ?? []
    )
  }

  /// Deletes the [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteCustomClass.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteCustomClass(
    _ request: Google_Cloud_Speech_V2_DeleteCustomClassRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_DeleteCustomClassRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deleteCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteCustomClassInterceptors() ?? []
    )
  }

  /// Undeletes the [CustomClass][google.cloud.speech.v2.CustomClass].
  ///
  /// - Parameters:
  ///   - request: Request to send to UndeleteCustomClass.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func undeleteCustomClass(
    _ request: Google_Cloud_Speech_V2_UndeleteCustomClassRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_UndeleteCustomClassRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeleteCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndeleteCustomClassInterceptors() ?? []
    )
  }

  /// Creates a [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// - Parameters:
  ///   - request: Request to send to CreatePhraseSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createPhraseSet(
    _ request: Google_Cloud_Speech_V2_CreatePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_CreatePhraseSetRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createPhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePhraseSetInterceptors() ?? []
    )
  }

  /// Lists PhraseSets.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListPhraseSets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listPhraseSets(
    _ request: Google_Cloud_Speech_V2_ListPhraseSetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_ListPhraseSetsRequest, Google_Cloud_Speech_V2_ListPhraseSetsResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listPhraseSets.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListPhraseSetsInterceptors() ?? []
    )
  }

  /// Returns the requested
  /// [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPhraseSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPhraseSet(
    _ request: Google_Cloud_Speech_V2_GetPhraseSetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_GetPhraseSetRequest, Google_Cloud_Speech_V2_PhraseSet> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getPhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPhraseSetInterceptors() ?? []
    )
  }

  /// Updates the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdatePhraseSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updatePhraseSet(
    _ request: Google_Cloud_Speech_V2_UpdatePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_UpdatePhraseSetRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updatePhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePhraseSetInterceptors() ?? []
    )
  }

  /// Deletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// - Parameters:
  ///   - request: Request to send to DeletePhraseSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deletePhraseSet(
    _ request: Google_Cloud_Speech_V2_DeletePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_DeletePhraseSetRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deletePhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePhraseSetInterceptors() ?? []
    )
  }

  /// Undeletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  ///
  /// - Parameters:
  ///   - request: Request to send to UndeletePhraseSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func undeletePhraseSet(
    _ request: Google_Cloud_Speech_V2_UndeletePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Speech_V2_UndeletePhraseSetRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeletePhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndeletePhraseSetInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension Google_Cloud_Speech_V2_SpeechClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "Google_Cloud_Speech_V2_SpeechNIOClient")
public final class Google_Cloud_Speech_V2_SpeechClient: Google_Cloud_Speech_V2_SpeechClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the google.cloud.speech.v2.Speech service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Google_Cloud_Speech_V2_SpeechNIOClient: Google_Cloud_Speech_V2_SpeechClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol?

  /// Creates a client for the google.cloud.speech.v2.Speech service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
/// Enables speech transcription and resource management.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Google_Cloud_Speech_V2_SpeechAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol? { get }

  func makeCreateRecognizerCall(
    _ request: Google_Cloud_Speech_V2_CreateRecognizerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_CreateRecognizerRequest, Google_Longrunning_Operation>

  func makeListRecognizersCall(
    _ request: Google_Cloud_Speech_V2_ListRecognizersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_ListRecognizersRequest, Google_Cloud_Speech_V2_ListRecognizersResponse>

  func makeGetRecognizerCall(
    _ request: Google_Cloud_Speech_V2_GetRecognizerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_GetRecognizerRequest, Google_Cloud_Speech_V2_Recognizer>

  func makeUpdateRecognizerCall(
    _ request: Google_Cloud_Speech_V2_UpdateRecognizerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UpdateRecognizerRequest, Google_Longrunning_Operation>

  func makeDeleteRecognizerCall(
    _ request: Google_Cloud_Speech_V2_DeleteRecognizerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_DeleteRecognizerRequest, Google_Longrunning_Operation>

  func makeUndeleteRecognizerCall(
    _ request: Google_Cloud_Speech_V2_UndeleteRecognizerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UndeleteRecognizerRequest, Google_Longrunning_Operation>

  func makeRecognizeCall(
    _ request: Google_Cloud_Speech_V2_RecognizeRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_RecognizeRequest, Google_Cloud_Speech_V2_RecognizeResponse>

  func makeStreamingRecognizeCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Google_Cloud_Speech_V2_StreamingRecognizeRequest, Google_Cloud_Speech_V2_StreamingRecognizeResponse>

  func makeBatchRecognizeCall(
    _ request: Google_Cloud_Speech_V2_BatchRecognizeRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_BatchRecognizeRequest, Google_Longrunning_Operation>

  func makeGetConfigCall(
    _ request: Google_Cloud_Speech_V2_GetConfigRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_GetConfigRequest, Google_Cloud_Speech_V2_Config>

  func makeUpdateConfigCall(
    _ request: Google_Cloud_Speech_V2_UpdateConfigRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UpdateConfigRequest, Google_Cloud_Speech_V2_Config>

  func makeCreateCustomClassCall(
    _ request: Google_Cloud_Speech_V2_CreateCustomClassRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_CreateCustomClassRequest, Google_Longrunning_Operation>

  func makeListCustomClassesCall(
    _ request: Google_Cloud_Speech_V2_ListCustomClassesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_ListCustomClassesRequest, Google_Cloud_Speech_V2_ListCustomClassesResponse>

  func makeGetCustomClassCall(
    _ request: Google_Cloud_Speech_V2_GetCustomClassRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_GetCustomClassRequest, Google_Cloud_Speech_V2_CustomClass>

  func makeUpdateCustomClassCall(
    _ request: Google_Cloud_Speech_V2_UpdateCustomClassRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UpdateCustomClassRequest, Google_Longrunning_Operation>

  func makeDeleteCustomClassCall(
    _ request: Google_Cloud_Speech_V2_DeleteCustomClassRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_DeleteCustomClassRequest, Google_Longrunning_Operation>

  func makeUndeleteCustomClassCall(
    _ request: Google_Cloud_Speech_V2_UndeleteCustomClassRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UndeleteCustomClassRequest, Google_Longrunning_Operation>

  func makeCreatePhraseSetCall(
    _ request: Google_Cloud_Speech_V2_CreatePhraseSetRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_CreatePhraseSetRequest, Google_Longrunning_Operation>

  func makeListPhraseSetsCall(
    _ request: Google_Cloud_Speech_V2_ListPhraseSetsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_ListPhraseSetsRequest, Google_Cloud_Speech_V2_ListPhraseSetsResponse>

  func makeGetPhraseSetCall(
    _ request: Google_Cloud_Speech_V2_GetPhraseSetRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_GetPhraseSetRequest, Google_Cloud_Speech_V2_PhraseSet>

  func makeUpdatePhraseSetCall(
    _ request: Google_Cloud_Speech_V2_UpdatePhraseSetRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UpdatePhraseSetRequest, Google_Longrunning_Operation>

  func makeDeletePhraseSetCall(
    _ request: Google_Cloud_Speech_V2_DeletePhraseSetRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_DeletePhraseSetRequest, Google_Longrunning_Operation>

  func makeUndeletePhraseSetCall(
    _ request: Google_Cloud_Speech_V2_UndeletePhraseSetRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UndeletePhraseSetRequest, Google_Longrunning_Operation>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Google_Cloud_Speech_V2_SpeechAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Google_Cloud_Speech_V2_SpeechClientMetadata.serviceDescriptor
  }

  public var interceptors: Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeCreateRecognizerCall(
    _ request: Google_Cloud_Speech_V2_CreateRecognizerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_CreateRecognizerRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRecognizerInterceptors() ?? []
    )
  }

  public func makeListRecognizersCall(
    _ request: Google_Cloud_Speech_V2_ListRecognizersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_ListRecognizersRequest, Google_Cloud_Speech_V2_ListRecognizersResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listRecognizers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListRecognizersInterceptors() ?? []
    )
  }

  public func makeGetRecognizerCall(
    _ request: Google_Cloud_Speech_V2_GetRecognizerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_GetRecognizerRequest, Google_Cloud_Speech_V2_Recognizer> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRecognizerInterceptors() ?? []
    )
  }

  public func makeUpdateRecognizerCall(
    _ request: Google_Cloud_Speech_V2_UpdateRecognizerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UpdateRecognizerRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRecognizerInterceptors() ?? []
    )
  }

  public func makeDeleteRecognizerCall(
    _ request: Google_Cloud_Speech_V2_DeleteRecognizerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_DeleteRecognizerRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deleteRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteRecognizerInterceptors() ?? []
    )
  }

  public func makeUndeleteRecognizerCall(
    _ request: Google_Cloud_Speech_V2_UndeleteRecognizerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UndeleteRecognizerRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeleteRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndeleteRecognizerInterceptors() ?? []
    )
  }

  public func makeRecognizeCall(
    _ request: Google_Cloud_Speech_V2_RecognizeRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_RecognizeRequest, Google_Cloud_Speech_V2_RecognizeResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.recognize.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRecognizeInterceptors() ?? []
    )
  }

  public func makeStreamingRecognizeCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Google_Cloud_Speech_V2_StreamingRecognizeRequest, Google_Cloud_Speech_V2_StreamingRecognizeResponse> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.streamingRecognize.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamingRecognizeInterceptors() ?? []
    )
  }

  public func makeBatchRecognizeCall(
    _ request: Google_Cloud_Speech_V2_BatchRecognizeRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_BatchRecognizeRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.batchRecognize.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchRecognizeInterceptors() ?? []
    )
  }

  public func makeGetConfigCall(
    _ request: Google_Cloud_Speech_V2_GetConfigRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_GetConfigRequest, Google_Cloud_Speech_V2_Config> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigInterceptors() ?? []
    )
  }

  public func makeUpdateConfigCall(
    _ request: Google_Cloud_Speech_V2_UpdateConfigRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UpdateConfigRequest, Google_Cloud_Speech_V2_Config> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateConfigInterceptors() ?? []
    )
  }

  public func makeCreateCustomClassCall(
    _ request: Google_Cloud_Speech_V2_CreateCustomClassRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_CreateCustomClassRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateCustomClassInterceptors() ?? []
    )
  }

  public func makeListCustomClassesCall(
    _ request: Google_Cloud_Speech_V2_ListCustomClassesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_ListCustomClassesRequest, Google_Cloud_Speech_V2_ListCustomClassesResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listCustomClasses.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListCustomClassesInterceptors() ?? []
    )
  }

  public func makeGetCustomClassCall(
    _ request: Google_Cloud_Speech_V2_GetCustomClassRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_GetCustomClassRequest, Google_Cloud_Speech_V2_CustomClass> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCustomClassInterceptors() ?? []
    )
  }

  public func makeUpdateCustomClassCall(
    _ request: Google_Cloud_Speech_V2_UpdateCustomClassRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UpdateCustomClassRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateCustomClassInterceptors() ?? []
    )
  }

  public func makeDeleteCustomClassCall(
    _ request: Google_Cloud_Speech_V2_DeleteCustomClassRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_DeleteCustomClassRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deleteCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteCustomClassInterceptors() ?? []
    )
  }

  public func makeUndeleteCustomClassCall(
    _ request: Google_Cloud_Speech_V2_UndeleteCustomClassRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UndeleteCustomClassRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeleteCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndeleteCustomClassInterceptors() ?? []
    )
  }

  public func makeCreatePhraseSetCall(
    _ request: Google_Cloud_Speech_V2_CreatePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_CreatePhraseSetRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createPhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePhraseSetInterceptors() ?? []
    )
  }

  public func makeListPhraseSetsCall(
    _ request: Google_Cloud_Speech_V2_ListPhraseSetsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_ListPhraseSetsRequest, Google_Cloud_Speech_V2_ListPhraseSetsResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listPhraseSets.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListPhraseSetsInterceptors() ?? []
    )
  }

  public func makeGetPhraseSetCall(
    _ request: Google_Cloud_Speech_V2_GetPhraseSetRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_GetPhraseSetRequest, Google_Cloud_Speech_V2_PhraseSet> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getPhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPhraseSetInterceptors() ?? []
    )
  }

  public func makeUpdatePhraseSetCall(
    _ request: Google_Cloud_Speech_V2_UpdatePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UpdatePhraseSetRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updatePhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePhraseSetInterceptors() ?? []
    )
  }

  public func makeDeletePhraseSetCall(
    _ request: Google_Cloud_Speech_V2_DeletePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_DeletePhraseSetRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deletePhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePhraseSetInterceptors() ?? []
    )
  }

  public func makeUndeletePhraseSetCall(
    _ request: Google_Cloud_Speech_V2_UndeletePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Speech_V2_UndeletePhraseSetRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeletePhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndeletePhraseSetInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Google_Cloud_Speech_V2_SpeechAsyncClientProtocol {
  public func createRecognizer(
    _ request: Google_Cloud_Speech_V2_CreateRecognizerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRecognizerInterceptors() ?? []
    )
  }

  public func listRecognizers(
    _ request: Google_Cloud_Speech_V2_ListRecognizersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Speech_V2_ListRecognizersResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listRecognizers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListRecognizersInterceptors() ?? []
    )
  }

  public func getRecognizer(
    _ request: Google_Cloud_Speech_V2_GetRecognizerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Speech_V2_Recognizer {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRecognizerInterceptors() ?? []
    )
  }

  public func updateRecognizer(
    _ request: Google_Cloud_Speech_V2_UpdateRecognizerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRecognizerInterceptors() ?? []
    )
  }

  public func deleteRecognizer(
    _ request: Google_Cloud_Speech_V2_DeleteRecognizerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deleteRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteRecognizerInterceptors() ?? []
    )
  }

  public func undeleteRecognizer(
    _ request: Google_Cloud_Speech_V2_UndeleteRecognizerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeleteRecognizer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndeleteRecognizerInterceptors() ?? []
    )
  }

  public func recognize(
    _ request: Google_Cloud_Speech_V2_RecognizeRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Speech_V2_RecognizeResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.recognize.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRecognizeInterceptors() ?? []
    )
  }

  public func streamingRecognize<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Google_Cloud_Speech_V2_StreamingRecognizeResponse> where RequestStream: Sequence, RequestStream.Element == Google_Cloud_Speech_V2_StreamingRecognizeRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.streamingRecognize.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamingRecognizeInterceptors() ?? []
    )
  }

  public func streamingRecognize<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Google_Cloud_Speech_V2_StreamingRecognizeResponse> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Google_Cloud_Speech_V2_StreamingRecognizeRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.streamingRecognize.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamingRecognizeInterceptors() ?? []
    )
  }

  public func batchRecognize(
    _ request: Google_Cloud_Speech_V2_BatchRecognizeRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.batchRecognize.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchRecognizeInterceptors() ?? []
    )
  }

  public func getConfig(
    _ request: Google_Cloud_Speech_V2_GetConfigRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Speech_V2_Config {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigInterceptors() ?? []
    )
  }

  public func updateConfig(
    _ request: Google_Cloud_Speech_V2_UpdateConfigRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Speech_V2_Config {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateConfigInterceptors() ?? []
    )
  }

  public func createCustomClass(
    _ request: Google_Cloud_Speech_V2_CreateCustomClassRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateCustomClassInterceptors() ?? []
    )
  }

  public func listCustomClasses(
    _ request: Google_Cloud_Speech_V2_ListCustomClassesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Speech_V2_ListCustomClassesResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listCustomClasses.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListCustomClassesInterceptors() ?? []
    )
  }

  public func getCustomClass(
    _ request: Google_Cloud_Speech_V2_GetCustomClassRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Speech_V2_CustomClass {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCustomClassInterceptors() ?? []
    )
  }

  public func updateCustomClass(
    _ request: Google_Cloud_Speech_V2_UpdateCustomClassRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateCustomClassInterceptors() ?? []
    )
  }

  public func deleteCustomClass(
    _ request: Google_Cloud_Speech_V2_DeleteCustomClassRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deleteCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteCustomClassInterceptors() ?? []
    )
  }

  public func undeleteCustomClass(
    _ request: Google_Cloud_Speech_V2_UndeleteCustomClassRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeleteCustomClass.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndeleteCustomClassInterceptors() ?? []
    )
  }

  public func createPhraseSet(
    _ request: Google_Cloud_Speech_V2_CreatePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createPhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePhraseSetInterceptors() ?? []
    )
  }

  public func listPhraseSets(
    _ request: Google_Cloud_Speech_V2_ListPhraseSetsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Speech_V2_ListPhraseSetsResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listPhraseSets.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListPhraseSetsInterceptors() ?? []
    )
  }

  public func getPhraseSet(
    _ request: Google_Cloud_Speech_V2_GetPhraseSetRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Speech_V2_PhraseSet {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getPhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPhraseSetInterceptors() ?? []
    )
  }

  public func updatePhraseSet(
    _ request: Google_Cloud_Speech_V2_UpdatePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updatePhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePhraseSetInterceptors() ?? []
    )
  }

  public func deletePhraseSet(
    _ request: Google_Cloud_Speech_V2_DeletePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deletePhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePhraseSetInterceptors() ?? []
    )
  }

  public func undeletePhraseSet(
    _ request: Google_Cloud_Speech_V2_UndeletePhraseSetRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeletePhraseSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndeletePhraseSetInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Google_Cloud_Speech_V2_SpeechAsyncClient: Google_Cloud_Speech_V2_SpeechAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

public protocol Google_Cloud_Speech_V2_SpeechClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'createRecognizer'.
  func makeCreateRecognizerInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_CreateRecognizerRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'listRecognizers'.
  func makeListRecognizersInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_ListRecognizersRequest, Google_Cloud_Speech_V2_ListRecognizersResponse>]

  /// - Returns: Interceptors to use when invoking 'getRecognizer'.
  func makeGetRecognizerInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_GetRecognizerRequest, Google_Cloud_Speech_V2_Recognizer>]

  /// - Returns: Interceptors to use when invoking 'updateRecognizer'.
  func makeUpdateRecognizerInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_UpdateRecognizerRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'deleteRecognizer'.
  func makeDeleteRecognizerInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_DeleteRecognizerRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'undeleteRecognizer'.
  func makeUndeleteRecognizerInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_UndeleteRecognizerRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'recognize'.
  func makeRecognizeInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_RecognizeRequest, Google_Cloud_Speech_V2_RecognizeResponse>]

  /// - Returns: Interceptors to use when invoking 'streamingRecognize'.
  func makeStreamingRecognizeInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_StreamingRecognizeRequest, Google_Cloud_Speech_V2_StreamingRecognizeResponse>]

  /// - Returns: Interceptors to use when invoking 'batchRecognize'.
  func makeBatchRecognizeInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_BatchRecognizeRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'getConfig'.
  func makeGetConfigInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_GetConfigRequest, Google_Cloud_Speech_V2_Config>]

  /// - Returns: Interceptors to use when invoking 'updateConfig'.
  func makeUpdateConfigInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_UpdateConfigRequest, Google_Cloud_Speech_V2_Config>]

  /// - Returns: Interceptors to use when invoking 'createCustomClass'.
  func makeCreateCustomClassInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_CreateCustomClassRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'listCustomClasses'.
  func makeListCustomClassesInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_ListCustomClassesRequest, Google_Cloud_Speech_V2_ListCustomClassesResponse>]

  /// - Returns: Interceptors to use when invoking 'getCustomClass'.
  func makeGetCustomClassInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_GetCustomClassRequest, Google_Cloud_Speech_V2_CustomClass>]

  /// - Returns: Interceptors to use when invoking 'updateCustomClass'.
  func makeUpdateCustomClassInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_UpdateCustomClassRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'deleteCustomClass'.
  func makeDeleteCustomClassInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_DeleteCustomClassRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'undeleteCustomClass'.
  func makeUndeleteCustomClassInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_UndeleteCustomClassRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'createPhraseSet'.
  func makeCreatePhraseSetInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_CreatePhraseSetRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'listPhraseSets'.
  func makeListPhraseSetsInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_ListPhraseSetsRequest, Google_Cloud_Speech_V2_ListPhraseSetsResponse>]

  /// - Returns: Interceptors to use when invoking 'getPhraseSet'.
  func makeGetPhraseSetInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_GetPhraseSetRequest, Google_Cloud_Speech_V2_PhraseSet>]

  /// - Returns: Interceptors to use when invoking 'updatePhraseSet'.
  func makeUpdatePhraseSetInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_UpdatePhraseSetRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'deletePhraseSet'.
  func makeDeletePhraseSetInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_DeletePhraseSetRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'undeletePhraseSet'.
  func makeUndeletePhraseSetInterceptors() -> [ClientInterceptor<Google_Cloud_Speech_V2_UndeletePhraseSetRequest, Google_Longrunning_Operation>]
}

public enum Google_Cloud_Speech_V2_SpeechClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Speech",
    fullName: "google.cloud.speech.v2.Speech",
    methods: [
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createRecognizer,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listRecognizers,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getRecognizer,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateRecognizer,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deleteRecognizer,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeleteRecognizer,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.recognize,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.streamingRecognize,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.batchRecognize,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getConfig,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateConfig,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createCustomClass,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listCustomClasses,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getCustomClass,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updateCustomClass,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deleteCustomClass,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeleteCustomClass,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.createPhraseSet,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.listPhraseSets,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.getPhraseSet,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.updatePhraseSet,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.deletePhraseSet,
      Google_Cloud_Speech_V2_SpeechClientMetadata.Methods.undeletePhraseSet,
    ]
  )

  public enum Methods {
    public static let createRecognizer = GRPCMethodDescriptor(
      name: "CreateRecognizer",
      path: "/google.cloud.speech.v2.Speech/CreateRecognizer",
      type: GRPCCallType.unary
    )

    public static let listRecognizers = GRPCMethodDescriptor(
      name: "ListRecognizers",
      path: "/google.cloud.speech.v2.Speech/ListRecognizers",
      type: GRPCCallType.unary
    )

    public static let getRecognizer = GRPCMethodDescriptor(
      name: "GetRecognizer",
      path: "/google.cloud.speech.v2.Speech/GetRecognizer",
      type: GRPCCallType.unary
    )

    public static let updateRecognizer = GRPCMethodDescriptor(
      name: "UpdateRecognizer",
      path: "/google.cloud.speech.v2.Speech/UpdateRecognizer",
      type: GRPCCallType.unary
    )

    public static let deleteRecognizer = GRPCMethodDescriptor(
      name: "DeleteRecognizer",
      path: "/google.cloud.speech.v2.Speech/DeleteRecognizer",
      type: GRPCCallType.unary
    )

    public static let undeleteRecognizer = GRPCMethodDescriptor(
      name: "UndeleteRecognizer",
      path: "/google.cloud.speech.v2.Speech/UndeleteRecognizer",
      type: GRPCCallType.unary
    )

    public static let recognize = GRPCMethodDescriptor(
      name: "Recognize",
      path: "/google.cloud.speech.v2.Speech/Recognize",
      type: GRPCCallType.unary
    )

    public static let streamingRecognize = GRPCMethodDescriptor(
      name: "StreamingRecognize",
      path: "/google.cloud.speech.v2.Speech/StreamingRecognize",
      type: GRPCCallType.bidirectionalStreaming
    )

    public static let batchRecognize = GRPCMethodDescriptor(
      name: "BatchRecognize",
      path: "/google.cloud.speech.v2.Speech/BatchRecognize",
      type: GRPCCallType.unary
    )

    public static let getConfig = GRPCMethodDescriptor(
      name: "GetConfig",
      path: "/google.cloud.speech.v2.Speech/GetConfig",
      type: GRPCCallType.unary
    )

    public static let updateConfig = GRPCMethodDescriptor(
      name: "UpdateConfig",
      path: "/google.cloud.speech.v2.Speech/UpdateConfig",
      type: GRPCCallType.unary
    )

    public static let createCustomClass = GRPCMethodDescriptor(
      name: "CreateCustomClass",
      path: "/google.cloud.speech.v2.Speech/CreateCustomClass",
      type: GRPCCallType.unary
    )

    public static let listCustomClasses = GRPCMethodDescriptor(
      name: "ListCustomClasses",
      path: "/google.cloud.speech.v2.Speech/ListCustomClasses",
      type: GRPCCallType.unary
    )

    public static let getCustomClass = GRPCMethodDescriptor(
      name: "GetCustomClass",
      path: "/google.cloud.speech.v2.Speech/GetCustomClass",
      type: GRPCCallType.unary
    )

    public static let updateCustomClass = GRPCMethodDescriptor(
      name: "UpdateCustomClass",
      path: "/google.cloud.speech.v2.Speech/UpdateCustomClass",
      type: GRPCCallType.unary
    )

    public static let deleteCustomClass = GRPCMethodDescriptor(
      name: "DeleteCustomClass",
      path: "/google.cloud.speech.v2.Speech/DeleteCustomClass",
      type: GRPCCallType.unary
    )

    public static let undeleteCustomClass = GRPCMethodDescriptor(
      name: "UndeleteCustomClass",
      path: "/google.cloud.speech.v2.Speech/UndeleteCustomClass",
      type: GRPCCallType.unary
    )

    public static let createPhraseSet = GRPCMethodDescriptor(
      name: "CreatePhraseSet",
      path: "/google.cloud.speech.v2.Speech/CreatePhraseSet",
      type: GRPCCallType.unary
    )

    public static let listPhraseSets = GRPCMethodDescriptor(
      name: "ListPhraseSets",
      path: "/google.cloud.speech.v2.Speech/ListPhraseSets",
      type: GRPCCallType.unary
    )

    public static let getPhraseSet = GRPCMethodDescriptor(
      name: "GetPhraseSet",
      path: "/google.cloud.speech.v2.Speech/GetPhraseSet",
      type: GRPCCallType.unary
    )

    public static let updatePhraseSet = GRPCMethodDescriptor(
      name: "UpdatePhraseSet",
      path: "/google.cloud.speech.v2.Speech/UpdatePhraseSet",
      type: GRPCCallType.unary
    )

    public static let deletePhraseSet = GRPCMethodDescriptor(
      name: "DeletePhraseSet",
      path: "/google.cloud.speech.v2.Speech/DeletePhraseSet",
      type: GRPCCallType.unary
    )

    public static let undeletePhraseSet = GRPCMethodDescriptor(
      name: "UndeletePhraseSet",
      path: "/google.cloud.speech.v2.Speech/UndeletePhraseSet",
      type: GRPCCallType.unary
    )
  }
}

/// Enables speech transcription and resource management.
///
/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Speech_V2_SpeechProvider: CallHandlerProvider {
  var interceptors: Google_Cloud_Speech_V2_SpeechServerInterceptorFactoryProtocol? { get }

  /// Creates a [Recognizer][google.cloud.speech.v2.Recognizer].
  func createRecognizer(request: Google_Cloud_Speech_V2_CreateRecognizerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Lists Recognizers.
  func listRecognizers(request: Google_Cloud_Speech_V2_ListRecognizersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Speech_V2_ListRecognizersResponse>

  /// Returns the requested
  /// [Recognizer][google.cloud.speech.v2.Recognizer]. Fails with
  /// [NOT_FOUND][google.rpc.Code.NOT_FOUND] if the requested Recognizer doesn't
  /// exist.
  func getRecognizer(request: Google_Cloud_Speech_V2_GetRecognizerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Speech_V2_Recognizer>

  /// Updates the [Recognizer][google.cloud.speech.v2.Recognizer].
  func updateRecognizer(request: Google_Cloud_Speech_V2_UpdateRecognizerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Deletes the [Recognizer][google.cloud.speech.v2.Recognizer].
  func deleteRecognizer(request: Google_Cloud_Speech_V2_DeleteRecognizerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Undeletes the [Recognizer][google.cloud.speech.v2.Recognizer].
  func undeleteRecognizer(request: Google_Cloud_Speech_V2_UndeleteRecognizerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Performs synchronous Speech recognition: receive results after all audio
  /// has been sent and processed.
  func recognize(request: Google_Cloud_Speech_V2_RecognizeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Speech_V2_RecognizeResponse>

  /// Performs bidirectional streaming speech recognition: receive results while
  /// sending audio. This method is only available via the gRPC API (not REST).
  func streamingRecognize(context: StreamingResponseCallContext<Google_Cloud_Speech_V2_StreamingRecognizeResponse>) -> EventLoopFuture<(StreamEvent<Google_Cloud_Speech_V2_StreamingRecognizeRequest>) -> Void>

  /// Performs batch asynchronous speech recognition: send a request with N
  /// audio files and receive a long running operation that can be polled to see
  /// when the transcriptions are finished.
  func batchRecognize(request: Google_Cloud_Speech_V2_BatchRecognizeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Returns the requested [Config][google.cloud.speech.v2.Config].
  func getConfig(request: Google_Cloud_Speech_V2_GetConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Speech_V2_Config>

  /// Updates the [Config][google.cloud.speech.v2.Config].
  func updateConfig(request: Google_Cloud_Speech_V2_UpdateConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Speech_V2_Config>

  /// Creates a [CustomClass][google.cloud.speech.v2.CustomClass].
  func createCustomClass(request: Google_Cloud_Speech_V2_CreateCustomClassRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Lists CustomClasses.
  func listCustomClasses(request: Google_Cloud_Speech_V2_ListCustomClassesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Speech_V2_ListCustomClassesResponse>

  /// Returns the requested
  /// [CustomClass][google.cloud.speech.v2.CustomClass].
  func getCustomClass(request: Google_Cloud_Speech_V2_GetCustomClassRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Speech_V2_CustomClass>

  /// Updates the [CustomClass][google.cloud.speech.v2.CustomClass].
  func updateCustomClass(request: Google_Cloud_Speech_V2_UpdateCustomClassRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Deletes the [CustomClass][google.cloud.speech.v2.CustomClass].
  func deleteCustomClass(request: Google_Cloud_Speech_V2_DeleteCustomClassRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Undeletes the [CustomClass][google.cloud.speech.v2.CustomClass].
  func undeleteCustomClass(request: Google_Cloud_Speech_V2_UndeleteCustomClassRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Creates a [PhraseSet][google.cloud.speech.v2.PhraseSet].
  func createPhraseSet(request: Google_Cloud_Speech_V2_CreatePhraseSetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Lists PhraseSets.
  func listPhraseSets(request: Google_Cloud_Speech_V2_ListPhraseSetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Speech_V2_ListPhraseSetsResponse>

  /// Returns the requested
  /// [PhraseSet][google.cloud.speech.v2.PhraseSet].
  func getPhraseSet(request: Google_Cloud_Speech_V2_GetPhraseSetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Speech_V2_PhraseSet>

  /// Updates the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  func updatePhraseSet(request: Google_Cloud_Speech_V2_UpdatePhraseSetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Deletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  func deletePhraseSet(request: Google_Cloud_Speech_V2_DeletePhraseSetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>

  /// Undeletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  func undeletePhraseSet(request: Google_Cloud_Speech_V2_UndeletePhraseSetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
}

extension Google_Cloud_Speech_V2_SpeechProvider {
  public var serviceName: Substring {
    return Google_Cloud_Speech_V2_SpeechServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateRecognizer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_CreateRecognizerRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeCreateRecognizerInterceptors() ?? [],
        userFunction: self.createRecognizer(request:context:)
      )

    case "ListRecognizers":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_ListRecognizersRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_ListRecognizersResponse>(),
        interceptors: self.interceptors?.makeListRecognizersInterceptors() ?? [],
        userFunction: self.listRecognizers(request:context:)
      )

    case "GetRecognizer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_GetRecognizerRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_Recognizer>(),
        interceptors: self.interceptors?.makeGetRecognizerInterceptors() ?? [],
        userFunction: self.getRecognizer(request:context:)
      )

    case "UpdateRecognizer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UpdateRecognizerRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUpdateRecognizerInterceptors() ?? [],
        userFunction: self.updateRecognizer(request:context:)
      )

    case "DeleteRecognizer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_DeleteRecognizerRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeDeleteRecognizerInterceptors() ?? [],
        userFunction: self.deleteRecognizer(request:context:)
      )

    case "UndeleteRecognizer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UndeleteRecognizerRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUndeleteRecognizerInterceptors() ?? [],
        userFunction: self.undeleteRecognizer(request:context:)
      )

    case "Recognize":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_RecognizeRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_RecognizeResponse>(),
        interceptors: self.interceptors?.makeRecognizeInterceptors() ?? [],
        userFunction: self.recognize(request:context:)
      )

    case "StreamingRecognize":
      return BidirectionalStreamingServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_StreamingRecognizeRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_StreamingRecognizeResponse>(),
        interceptors: self.interceptors?.makeStreamingRecognizeInterceptors() ?? [],
        observerFactory: self.streamingRecognize(context:)
      )

    case "BatchRecognize":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_BatchRecognizeRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeBatchRecognizeInterceptors() ?? [],
        userFunction: self.batchRecognize(request:context:)
      )

    case "GetConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_GetConfigRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_Config>(),
        interceptors: self.interceptors?.makeGetConfigInterceptors() ?? [],
        userFunction: self.getConfig(request:context:)
      )

    case "UpdateConfig":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UpdateConfigRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_Config>(),
        interceptors: self.interceptors?.makeUpdateConfigInterceptors() ?? [],
        userFunction: self.updateConfig(request:context:)
      )

    case "CreateCustomClass":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_CreateCustomClassRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeCreateCustomClassInterceptors() ?? [],
        userFunction: self.createCustomClass(request:context:)
      )

    case "ListCustomClasses":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_ListCustomClassesRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_ListCustomClassesResponse>(),
        interceptors: self.interceptors?.makeListCustomClassesInterceptors() ?? [],
        userFunction: self.listCustomClasses(request:context:)
      )

    case "GetCustomClass":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_GetCustomClassRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_CustomClass>(),
        interceptors: self.interceptors?.makeGetCustomClassInterceptors() ?? [],
        userFunction: self.getCustomClass(request:context:)
      )

    case "UpdateCustomClass":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UpdateCustomClassRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUpdateCustomClassInterceptors() ?? [],
        userFunction: self.updateCustomClass(request:context:)
      )

    case "DeleteCustomClass":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_DeleteCustomClassRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeDeleteCustomClassInterceptors() ?? [],
        userFunction: self.deleteCustomClass(request:context:)
      )

    case "UndeleteCustomClass":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UndeleteCustomClassRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUndeleteCustomClassInterceptors() ?? [],
        userFunction: self.undeleteCustomClass(request:context:)
      )

    case "CreatePhraseSet":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_CreatePhraseSetRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeCreatePhraseSetInterceptors() ?? [],
        userFunction: self.createPhraseSet(request:context:)
      )

    case "ListPhraseSets":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_ListPhraseSetsRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_ListPhraseSetsResponse>(),
        interceptors: self.interceptors?.makeListPhraseSetsInterceptors() ?? [],
        userFunction: self.listPhraseSets(request:context:)
      )

    case "GetPhraseSet":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_GetPhraseSetRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_PhraseSet>(),
        interceptors: self.interceptors?.makeGetPhraseSetInterceptors() ?? [],
        userFunction: self.getPhraseSet(request:context:)
      )

    case "UpdatePhraseSet":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UpdatePhraseSetRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUpdatePhraseSetInterceptors() ?? [],
        userFunction: self.updatePhraseSet(request:context:)
      )

    case "DeletePhraseSet":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_DeletePhraseSetRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeDeletePhraseSetInterceptors() ?? [],
        userFunction: self.deletePhraseSet(request:context:)
      )

    case "UndeletePhraseSet":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UndeletePhraseSetRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUndeletePhraseSetInterceptors() ?? [],
        userFunction: self.undeletePhraseSet(request:context:)
      )

    default:
      return nil
    }
  }
}

#if compiler(>=5.6)

/// Enables speech transcription and resource management.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Google_Cloud_Speech_V2_SpeechAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Google_Cloud_Speech_V2_SpeechServerInterceptorFactoryProtocol? { get }

  /// Creates a [Recognizer][google.cloud.speech.v2.Recognizer].
  @Sendable func createRecognizer(
    request: Google_Cloud_Speech_V2_CreateRecognizerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Lists Recognizers.
  @Sendable func listRecognizers(
    request: Google_Cloud_Speech_V2_ListRecognizersRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Cloud_Speech_V2_ListRecognizersResponse

  /// Returns the requested
  /// [Recognizer][google.cloud.speech.v2.Recognizer]. Fails with
  /// [NOT_FOUND][google.rpc.Code.NOT_FOUND] if the requested Recognizer doesn't
  /// exist.
  @Sendable func getRecognizer(
    request: Google_Cloud_Speech_V2_GetRecognizerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Cloud_Speech_V2_Recognizer

  /// Updates the [Recognizer][google.cloud.speech.v2.Recognizer].
  @Sendable func updateRecognizer(
    request: Google_Cloud_Speech_V2_UpdateRecognizerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Deletes the [Recognizer][google.cloud.speech.v2.Recognizer].
  @Sendable func deleteRecognizer(
    request: Google_Cloud_Speech_V2_DeleteRecognizerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Undeletes the [Recognizer][google.cloud.speech.v2.Recognizer].
  @Sendable func undeleteRecognizer(
    request: Google_Cloud_Speech_V2_UndeleteRecognizerRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Performs synchronous Speech recognition: receive results after all audio
  /// has been sent and processed.
  @Sendable func recognize(
    request: Google_Cloud_Speech_V2_RecognizeRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Cloud_Speech_V2_RecognizeResponse

  /// Performs bidirectional streaming speech recognition: receive results while
  /// sending audio. This method is only available via the gRPC API (not REST).
  @Sendable func streamingRecognize(
    requestStream: GRPCAsyncRequestStream<Google_Cloud_Speech_V2_StreamingRecognizeRequest>,
    responseStream: GRPCAsyncResponseStreamWriter<Google_Cloud_Speech_V2_StreamingRecognizeResponse>,
    context: GRPCAsyncServerCallContext
  ) async throws

  /// Performs batch asynchronous speech recognition: send a request with N
  /// audio files and receive a long running operation that can be polled to see
  /// when the transcriptions are finished.
  @Sendable func batchRecognize(
    request: Google_Cloud_Speech_V2_BatchRecognizeRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Returns the requested [Config][google.cloud.speech.v2.Config].
  @Sendable func getConfig(
    request: Google_Cloud_Speech_V2_GetConfigRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Cloud_Speech_V2_Config

  /// Updates the [Config][google.cloud.speech.v2.Config].
  @Sendable func updateConfig(
    request: Google_Cloud_Speech_V2_UpdateConfigRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Cloud_Speech_V2_Config

  /// Creates a [CustomClass][google.cloud.speech.v2.CustomClass].
  @Sendable func createCustomClass(
    request: Google_Cloud_Speech_V2_CreateCustomClassRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Lists CustomClasses.
  @Sendable func listCustomClasses(
    request: Google_Cloud_Speech_V2_ListCustomClassesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Cloud_Speech_V2_ListCustomClassesResponse

  /// Returns the requested
  /// [CustomClass][google.cloud.speech.v2.CustomClass].
  @Sendable func getCustomClass(
    request: Google_Cloud_Speech_V2_GetCustomClassRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Cloud_Speech_V2_CustomClass

  /// Updates the [CustomClass][google.cloud.speech.v2.CustomClass].
  @Sendable func updateCustomClass(
    request: Google_Cloud_Speech_V2_UpdateCustomClassRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Deletes the [CustomClass][google.cloud.speech.v2.CustomClass].
  @Sendable func deleteCustomClass(
    request: Google_Cloud_Speech_V2_DeleteCustomClassRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Undeletes the [CustomClass][google.cloud.speech.v2.CustomClass].
  @Sendable func undeleteCustomClass(
    request: Google_Cloud_Speech_V2_UndeleteCustomClassRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Creates a [PhraseSet][google.cloud.speech.v2.PhraseSet].
  @Sendable func createPhraseSet(
    request: Google_Cloud_Speech_V2_CreatePhraseSetRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Lists PhraseSets.
  @Sendable func listPhraseSets(
    request: Google_Cloud_Speech_V2_ListPhraseSetsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Cloud_Speech_V2_ListPhraseSetsResponse

  /// Returns the requested
  /// [PhraseSet][google.cloud.speech.v2.PhraseSet].
  @Sendable func getPhraseSet(
    request: Google_Cloud_Speech_V2_GetPhraseSetRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Cloud_Speech_V2_PhraseSet

  /// Updates the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  @Sendable func updatePhraseSet(
    request: Google_Cloud_Speech_V2_UpdatePhraseSetRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Deletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  @Sendable func deletePhraseSet(
    request: Google_Cloud_Speech_V2_DeletePhraseSetRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation

  /// Undeletes the [PhraseSet][google.cloud.speech.v2.PhraseSet].
  @Sendable func undeletePhraseSet(
    request: Google_Cloud_Speech_V2_UndeletePhraseSetRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Google_Longrunning_Operation
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Google_Cloud_Speech_V2_SpeechAsyncProvider {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Google_Cloud_Speech_V2_SpeechServerMetadata.serviceDescriptor
  }

  public var serviceName: Substring {
    return Google_Cloud_Speech_V2_SpeechServerMetadata.serviceDescriptor.fullName[...]
  }

  public var interceptors: Google_Cloud_Speech_V2_SpeechServerInterceptorFactoryProtocol? {
    return nil
  }

  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateRecognizer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_CreateRecognizerRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeCreateRecognizerInterceptors() ?? [],
        wrapping: self.createRecognizer(request:context:)
      )

    case "ListRecognizers":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_ListRecognizersRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_ListRecognizersResponse>(),
        interceptors: self.interceptors?.makeListRecognizersInterceptors() ?? [],
        wrapping: self.listRecognizers(request:context:)
      )

    case "GetRecognizer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_GetRecognizerRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_Recognizer>(),
        interceptors: self.interceptors?.makeGetRecognizerInterceptors() ?? [],
        wrapping: self.getRecognizer(request:context:)
      )

    case "UpdateRecognizer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UpdateRecognizerRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUpdateRecognizerInterceptors() ?? [],
        wrapping: self.updateRecognizer(request:context:)
      )

    case "DeleteRecognizer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_DeleteRecognizerRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeDeleteRecognizerInterceptors() ?? [],
        wrapping: self.deleteRecognizer(request:context:)
      )

    case "UndeleteRecognizer":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UndeleteRecognizerRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUndeleteRecognizerInterceptors() ?? [],
        wrapping: self.undeleteRecognizer(request:context:)
      )

    case "Recognize":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_RecognizeRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_RecognizeResponse>(),
        interceptors: self.interceptors?.makeRecognizeInterceptors() ?? [],
        wrapping: self.recognize(request:context:)
      )

    case "StreamingRecognize":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_StreamingRecognizeRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_StreamingRecognizeResponse>(),
        interceptors: self.interceptors?.makeStreamingRecognizeInterceptors() ?? [],
        wrapping: self.streamingRecognize(requestStream:responseStream:context:)
      )

    case "BatchRecognize":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_BatchRecognizeRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeBatchRecognizeInterceptors() ?? [],
        wrapping: self.batchRecognize(request:context:)
      )

    case "GetConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_GetConfigRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_Config>(),
        interceptors: self.interceptors?.makeGetConfigInterceptors() ?? [],
        wrapping: self.getConfig(request:context:)
      )

    case "UpdateConfig":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UpdateConfigRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_Config>(),
        interceptors: self.interceptors?.makeUpdateConfigInterceptors() ?? [],
        wrapping: self.updateConfig(request:context:)
      )

    case "CreateCustomClass":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_CreateCustomClassRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeCreateCustomClassInterceptors() ?? [],
        wrapping: self.createCustomClass(request:context:)
      )

    case "ListCustomClasses":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_ListCustomClassesRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_ListCustomClassesResponse>(),
        interceptors: self.interceptors?.makeListCustomClassesInterceptors() ?? [],
        wrapping: self.listCustomClasses(request:context:)
      )

    case "GetCustomClass":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_GetCustomClassRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_CustomClass>(),
        interceptors: self.interceptors?.makeGetCustomClassInterceptors() ?? [],
        wrapping: self.getCustomClass(request:context:)
      )

    case "UpdateCustomClass":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UpdateCustomClassRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUpdateCustomClassInterceptors() ?? [],
        wrapping: self.updateCustomClass(request:context:)
      )

    case "DeleteCustomClass":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_DeleteCustomClassRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeDeleteCustomClassInterceptors() ?? [],
        wrapping: self.deleteCustomClass(request:context:)
      )

    case "UndeleteCustomClass":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UndeleteCustomClassRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUndeleteCustomClassInterceptors() ?? [],
        wrapping: self.undeleteCustomClass(request:context:)
      )

    case "CreatePhraseSet":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_CreatePhraseSetRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeCreatePhraseSetInterceptors() ?? [],
        wrapping: self.createPhraseSet(request:context:)
      )

    case "ListPhraseSets":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_ListPhraseSetsRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_ListPhraseSetsResponse>(),
        interceptors: self.interceptors?.makeListPhraseSetsInterceptors() ?? [],
        wrapping: self.listPhraseSets(request:context:)
      )

    case "GetPhraseSet":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_GetPhraseSetRequest>(),
        responseSerializer: ProtobufSerializer<Google_Cloud_Speech_V2_PhraseSet>(),
        interceptors: self.interceptors?.makeGetPhraseSetInterceptors() ?? [],
        wrapping: self.getPhraseSet(request:context:)
      )

    case "UpdatePhraseSet":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UpdatePhraseSetRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUpdatePhraseSetInterceptors() ?? [],
        wrapping: self.updatePhraseSet(request:context:)
      )

    case "DeletePhraseSet":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_DeletePhraseSetRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeDeletePhraseSetInterceptors() ?? [],
        wrapping: self.deletePhraseSet(request:context:)
      )

    case "UndeletePhraseSet":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Google_Cloud_Speech_V2_UndeletePhraseSetRequest>(),
        responseSerializer: ProtobufSerializer<Google_Longrunning_Operation>(),
        interceptors: self.interceptors?.makeUndeletePhraseSetInterceptors() ?? [],
        wrapping: self.undeletePhraseSet(request:context:)
      )

    default:
      return nil
    }
  }
}

#endif // compiler(>=5.6)

public protocol Google_Cloud_Speech_V2_SpeechServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createRecognizer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateRecognizerInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_CreateRecognizerRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'listRecognizers'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListRecognizersInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_ListRecognizersRequest, Google_Cloud_Speech_V2_ListRecognizersResponse>]

  /// - Returns: Interceptors to use when handling 'getRecognizer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetRecognizerInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_GetRecognizerRequest, Google_Cloud_Speech_V2_Recognizer>]

  /// - Returns: Interceptors to use when handling 'updateRecognizer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateRecognizerInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_UpdateRecognizerRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'deleteRecognizer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteRecognizerInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_DeleteRecognizerRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'undeleteRecognizer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUndeleteRecognizerInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_UndeleteRecognizerRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'recognize'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRecognizeInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_RecognizeRequest, Google_Cloud_Speech_V2_RecognizeResponse>]

  /// - Returns: Interceptors to use when handling 'streamingRecognize'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeStreamingRecognizeInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_StreamingRecognizeRequest, Google_Cloud_Speech_V2_StreamingRecognizeResponse>]

  /// - Returns: Interceptors to use when handling 'batchRecognize'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchRecognizeInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_BatchRecognizeRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'getConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetConfigInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_GetConfigRequest, Google_Cloud_Speech_V2_Config>]

  /// - Returns: Interceptors to use when handling 'updateConfig'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateConfigInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_UpdateConfigRequest, Google_Cloud_Speech_V2_Config>]

  /// - Returns: Interceptors to use when handling 'createCustomClass'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateCustomClassInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_CreateCustomClassRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'listCustomClasses'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListCustomClassesInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_ListCustomClassesRequest, Google_Cloud_Speech_V2_ListCustomClassesResponse>]

  /// - Returns: Interceptors to use when handling 'getCustomClass'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetCustomClassInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_GetCustomClassRequest, Google_Cloud_Speech_V2_CustomClass>]

  /// - Returns: Interceptors to use when handling 'updateCustomClass'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateCustomClassInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_UpdateCustomClassRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'deleteCustomClass'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteCustomClassInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_DeleteCustomClassRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'undeleteCustomClass'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUndeleteCustomClassInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_UndeleteCustomClassRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'createPhraseSet'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreatePhraseSetInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_CreatePhraseSetRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'listPhraseSets'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListPhraseSetsInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_ListPhraseSetsRequest, Google_Cloud_Speech_V2_ListPhraseSetsResponse>]

  /// - Returns: Interceptors to use when handling 'getPhraseSet'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetPhraseSetInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_GetPhraseSetRequest, Google_Cloud_Speech_V2_PhraseSet>]

  /// - Returns: Interceptors to use when handling 'updatePhraseSet'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdatePhraseSetInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_UpdatePhraseSetRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'deletePhraseSet'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeletePhraseSetInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_DeletePhraseSetRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when handling 'undeletePhraseSet'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUndeletePhraseSetInterceptors() -> [ServerInterceptor<Google_Cloud_Speech_V2_UndeletePhraseSetRequest, Google_Longrunning_Operation>]
}

public enum Google_Cloud_Speech_V2_SpeechServerMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Speech",
    fullName: "google.cloud.speech.v2.Speech",
    methods: [
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.createRecognizer,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.listRecognizers,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.getRecognizer,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.updateRecognizer,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.deleteRecognizer,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.undeleteRecognizer,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.recognize,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.streamingRecognize,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.batchRecognize,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.getConfig,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.updateConfig,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.createCustomClass,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.listCustomClasses,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.getCustomClass,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.updateCustomClass,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.deleteCustomClass,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.undeleteCustomClass,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.createPhraseSet,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.listPhraseSets,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.getPhraseSet,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.updatePhraseSet,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.deletePhraseSet,
      Google_Cloud_Speech_V2_SpeechServerMetadata.Methods.undeletePhraseSet,
    ]
  )

  public enum Methods {
    public static let createRecognizer = GRPCMethodDescriptor(
      name: "CreateRecognizer",
      path: "/google.cloud.speech.v2.Speech/CreateRecognizer",
      type: GRPCCallType.unary
    )

    public static let listRecognizers = GRPCMethodDescriptor(
      name: "ListRecognizers",
      path: "/google.cloud.speech.v2.Speech/ListRecognizers",
      type: GRPCCallType.unary
    )

    public static let getRecognizer = GRPCMethodDescriptor(
      name: "GetRecognizer",
      path: "/google.cloud.speech.v2.Speech/GetRecognizer",
      type: GRPCCallType.unary
    )

    public static let updateRecognizer = GRPCMethodDescriptor(
      name: "UpdateRecognizer",
      path: "/google.cloud.speech.v2.Speech/UpdateRecognizer",
      type: GRPCCallType.unary
    )

    public static let deleteRecognizer = GRPCMethodDescriptor(
      name: "DeleteRecognizer",
      path: "/google.cloud.speech.v2.Speech/DeleteRecognizer",
      type: GRPCCallType.unary
    )

    public static let undeleteRecognizer = GRPCMethodDescriptor(
      name: "UndeleteRecognizer",
      path: "/google.cloud.speech.v2.Speech/UndeleteRecognizer",
      type: GRPCCallType.unary
    )

    public static let recognize = GRPCMethodDescriptor(
      name: "Recognize",
      path: "/google.cloud.speech.v2.Speech/Recognize",
      type: GRPCCallType.unary
    )

    public static let streamingRecognize = GRPCMethodDescriptor(
      name: "StreamingRecognize",
      path: "/google.cloud.speech.v2.Speech/StreamingRecognize",
      type: GRPCCallType.bidirectionalStreaming
    )

    public static let batchRecognize = GRPCMethodDescriptor(
      name: "BatchRecognize",
      path: "/google.cloud.speech.v2.Speech/BatchRecognize",
      type: GRPCCallType.unary
    )

    public static let getConfig = GRPCMethodDescriptor(
      name: "GetConfig",
      path: "/google.cloud.speech.v2.Speech/GetConfig",
      type: GRPCCallType.unary
    )

    public static let updateConfig = GRPCMethodDescriptor(
      name: "UpdateConfig",
      path: "/google.cloud.speech.v2.Speech/UpdateConfig",
      type: GRPCCallType.unary
    )

    public static let createCustomClass = GRPCMethodDescriptor(
      name: "CreateCustomClass",
      path: "/google.cloud.speech.v2.Speech/CreateCustomClass",
      type: GRPCCallType.unary
    )

    public static let listCustomClasses = GRPCMethodDescriptor(
      name: "ListCustomClasses",
      path: "/google.cloud.speech.v2.Speech/ListCustomClasses",
      type: GRPCCallType.unary
    )

    public static let getCustomClass = GRPCMethodDescriptor(
      name: "GetCustomClass",
      path: "/google.cloud.speech.v2.Speech/GetCustomClass",
      type: GRPCCallType.unary
    )

    public static let updateCustomClass = GRPCMethodDescriptor(
      name: "UpdateCustomClass",
      path: "/google.cloud.speech.v2.Speech/UpdateCustomClass",
      type: GRPCCallType.unary
    )

    public static let deleteCustomClass = GRPCMethodDescriptor(
      name: "DeleteCustomClass",
      path: "/google.cloud.speech.v2.Speech/DeleteCustomClass",
      type: GRPCCallType.unary
    )

    public static let undeleteCustomClass = GRPCMethodDescriptor(
      name: "UndeleteCustomClass",
      path: "/google.cloud.speech.v2.Speech/UndeleteCustomClass",
      type: GRPCCallType.unary
    )

    public static let createPhraseSet = GRPCMethodDescriptor(
      name: "CreatePhraseSet",
      path: "/google.cloud.speech.v2.Speech/CreatePhraseSet",
      type: GRPCCallType.unary
    )

    public static let listPhraseSets = GRPCMethodDescriptor(
      name: "ListPhraseSets",
      path: "/google.cloud.speech.v2.Speech/ListPhraseSets",
      type: GRPCCallType.unary
    )

    public static let getPhraseSet = GRPCMethodDescriptor(
      name: "GetPhraseSet",
      path: "/google.cloud.speech.v2.Speech/GetPhraseSet",
      type: GRPCCallType.unary
    )

    public static let updatePhraseSet = GRPCMethodDescriptor(
      name: "UpdatePhraseSet",
      path: "/google.cloud.speech.v2.Speech/UpdatePhraseSet",
      type: GRPCCallType.unary
    )

    public static let deletePhraseSet = GRPCMethodDescriptor(
      name: "DeletePhraseSet",
      path: "/google.cloud.speech.v2.Speech/DeletePhraseSet",
      type: GRPCCallType.unary
    )

    public static let undeletePhraseSet = GRPCMethodDescriptor(
      name: "UndeletePhraseSet",
      path: "/google.cloud.speech.v2.Speech/UndeletePhraseSet",
      type: GRPCCallType.unary
    )
  }
}
